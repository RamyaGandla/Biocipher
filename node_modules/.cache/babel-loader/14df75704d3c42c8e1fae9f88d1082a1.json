{"ast":null,"code":"var _jsxFileName = \"/home/ramya/PersonalProjects/Biocipher1/src/Login/LoginScreen.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport { Constants } from '../_components/Constants';\n\nclass LoginScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        this.handleSubmit(event);\n      }\n    };\n\n    this.state = {\n      userName: '',\n      password: '',\n      emailRequired: false,\n      passwordRequired: false,\n      loginData: Constants.USERCREDENTIALS,\n      UserExist: true,\n      UserError: '',\n      validEmail: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      emailRequired: false,\n      passwordRequired: false,\n      validEmail: true\n    });\n  }\n\n  handleSubmit(event) {\n    const {\n      userName,\n      password,\n      loginData\n    } = this.state;\n    let userEmailValidation = new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(userName) ? true : false;\n\n    if (userName !== '' && password !== '') {\n      if (userEmailValidation) {\n        console.log(loginData);\n\n        if (userName === loginData.username && password === loginData.password) {\n          localStorage.setItem('user', 1);\n\n          if (loginData.roleId === 1) {\n            localStorage.setItem('adminornot', 1);\n          } else {\n            localStorage.setItem('adminornot', 0);\n          }\n\n          window.location.href = '/manageEmployees';\n        } else {\n          this.setState({\n            UserExist: false,\n            UserError: userName !== loginData.username ? 'UserName does not Exists' : 'Password is wrong'\n          });\n        }\n      } else {\n        this.setState({\n          validEmail: userEmailValidation\n        });\n      }\n    } else {\n      this.setState({\n        emailRequired: userName === '' ? true : false,\n        passwordRequired: password === '' ? true : false\n      });\n    }\n  }\n\n  render() {\n    const {\n      userName,\n      password,\n      passwordRequired,\n      emailRequired,\n      UserExist,\n      UserError,\n      validEmail\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      onKeyPress: e => this.handleKeyPress(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, 'Login screen'))), /*#__PURE__*/React.createElement(reactbootstrap.Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }\n    }, 'Username', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 86\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"userName\",\n      value: userName,\n      type: \"email\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputEmail1\",\n      placeholder: \"userName\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }\n    })), emailRequired === true && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }\n    }, \"userName field is required\"), validEmail === false && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }\n    }, \"Please enter a proper Email-id\")), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, 'Password', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 85\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      type: \"password\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputPassword1\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    })), passwordRequired === true && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"Password field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n      style: {\n        float: 'right',\n        backgroundColor: '#EC661C',\n        borderColor: \"black\"\n      },\n      type: \"button\",\n      onClick: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, 'Login'), UserExist === false && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, UserError)))));\n  }\n\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/Biocipher1/src/Login/LoginScreen.js"],"names":["React","Component","reactbootstrap","Constants","LoginScreen","constructor","props","handleKeyPress","event","key","handleSubmit","state","userName","password","emailRequired","passwordRequired","loginData","USERCREDENTIALS","UserExist","UserError","validEmail","handleChange","bind","e","name","value","target","setState","userEmailValidation","RegExp","test","console","log","username","localStorage","setItem","roleId","window","location","href","render","color","fontSize","marginbottom","border","marginBottom","width","borderColor","borderWidth","float","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport { Constants } from '../_components/Constants';\n\nclass LoginScreen extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userName: '',\n            password: '',\n            emailRequired: false,\n            passwordRequired: false,\n            loginData: Constants.USERCREDENTIALS,\n            UserExist: true,\n            UserError: '',\n            validEmail: true,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n            emailRequired: false,\n            passwordRequired: false,\n            validEmail: true,\n         });\n    }\n\n    handleSubmit(event) {\n      const { userName, password, loginData } = this.state\n      let userEmailValidation = (new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(userName)) ? true : false;\n\n      if (userName !== '' && password !== '') {\n        if (userEmailValidation) {\n          console.log(loginData);\n          if (userName === loginData.username && password === loginData.password) {\n            localStorage.setItem('user', 1);\n            if (loginData.roleId === 1) {\n              localStorage.setItem('adminornot', 1);\n            } else {\n              localStorage.setItem('adminornot', 0);\n            }\n            window.location.href = '/manageEmployees';\n          } else {\n            this.setState({\n              UserExist: false,\n              UserError: (userName !== loginData.username) ? 'UserName does not Exists' : 'Password is wrong',\n            })\n          }\n        } else {\n          this.setState({\n            validEmail: userEmailValidation,\n          })\n        }\n      } else {\n        this.setState({\n          emailRequired: userName === '' ? true : false,\n          passwordRequired: password === '' ? true : false,\n        })\n      }\n    }\n\n    handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        this.handleSubmit(event);\n      }\n    }\n\n    render() {\n      const { userName, password, passwordRequired, emailRequired, UserExist, UserError, validEmail } = this.state;\n      return (\n        <div className=\"\" onKeyPress={e => this.handleKeyPress(e)}>\n          <reactbootstrap.Container className=\"pt-5 px-0\">\n            <div style={{ color: '#EC661C', fontSize: '20px'}} >\n                <span><h4>{'Login screen'}</h4></span>\n            </div>\n            <reactbootstrap.Form>\n               <reactbootstrap.FormGroup>\n                 <div style={{ marginbottom: '15px',border: '0px' }}>\n                   <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Username'}<span style={{ color: 'red' }}> * </span></label>\n                   <input\n                     name=\"userName\"\n                     value={userName}\n                     type=\"email\"\n                     style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                     id=\"exampleInputEmail1\"\n                     placeholder={\"userName\"}\n                     onChange={this.handleChange}\n                     autoComplete=\"off\" />\n                 </div>\n                 {emailRequired === true &&\n                   <div style={{ color: 'red', fontSize: '15px' }}>{\"userName field is required\"}</div>\n                 }\n                 {validEmail === false &&\n                   <div style={{ color: 'red', fontSize: '15px' }}>{\"Please enter a proper Email-id\"}</div>\n                 }\n               </reactbootstrap.FormGroup>\n              <reactbootstrap.FormGroup>\n                <div style={{ marginbottom: '15px',border: '0px' }}>\n                  <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Password'}<span style={{ color: 'red' }}> * </span></label>\n                  <input\n                    name=\"password\"\n                    value={password}\n                    type=\"password\"\n                    style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px' }}\n                    id=\"exampleInputPassword1\"\n                    placeholder={\"Password\"}\n                    onChange={this.handleChange}\n                    autoComplete=\"off\" />\n                </div>\n                {passwordRequired === true &&\n                  <div style={{ color: 'red', fontSize: '15px' }}>{\"Password field is required\"}</div>\n                }\n              </reactbootstrap.FormGroup>\n              <div>\n                <reactbootstrap.Button style={{ float: 'right',backgroundColor: '#EC661C',borderColor: \"black\"}} type=\"button\" onClick={e => this.handleSubmit(e)}>\n                    {'Login'}\n                </reactbootstrap.Button>\n                {UserExist === false &&\n                  <div style={{ color: 'red', fontSize: '15px' }}>{UserError}</div>\n                }\n              </div>\n            </reactbootstrap.Form>\n          </reactbootstrap.Container>\n        </div>\n      );\n    }\n}\n\nexport default (LoginScreen);\n"]},"metadata":{},"sourceType":"module"}