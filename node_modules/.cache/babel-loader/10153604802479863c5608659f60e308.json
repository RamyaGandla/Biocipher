{"ast":null,"code":"var _jsxFileName = \"/home/ramya/PersonalProjects/Biocipher1/src/Users/CreateUser.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport { Constants } from '../_components/Constants';\nimport * as emailjs from \"emailjs-com\";\n\nclass CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      role: 0,\n      roles: Constants.Roles,\n      emailError: '',\n      nameError: '',\n      passwordError: '',\n      feedback: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      emailError: '',\n      nameError: '',\n      passwordError: ''\n    });\n  }\n\n  handleSubmit() {\n    let userEmailValidation = new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(this.state.email) ? true : false;\n\n    if (this.state.name !== '' && this.state.email !== '' && this.state.password !== '' && userEmailValidation) {\n      console.log(\"create\");\n      Object.values(Constants.EMPLOYEEDATA).map(user => {\n        console.log(user);\n      });\n      const templateId = 'template_id';\n      this.sendFeedback(templateId, {\n        message_html: this.state.feedback,\n        from_name: this.state.name,\n        reply_to: this.state.email\n      });\n    } else {\n      this.setState({\n        emailError: this.state.email !== '' ? userEmailValidation ? '' : 'Not a valid email' : 'Email field is required',\n        nameError: this.state.name !== '' ? '' : 'Email field is required',\n        passwordError: this.state.password !== '' ? '' : 'Email field is required'\n      });\n    }\n  }\n\n  sendFeedback(templateId, variables) {\n    emailjs.send('gmail', templateId, variables).then(res => {\n      console.log('Email successfully sent!');\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      password,\n      roles,\n      role,\n      nameError,\n      emailError,\n      passwordError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, 'Create user'))), /*#__PURE__*/React.createElement(reactbootstrap.Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, 'User name', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 86\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      value: name,\n      type: \"text\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputEmail1\",\n      placeholder: \"User name\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, nameError), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, 'User email', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 87\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      type: \"email\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputEmail1\",\n      placeholder: \"Email\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, emailError), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: '15px',\n        border: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: '#EC661C',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, 'Password', /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 87\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      type: \"password\",\n      style: {\n        marginBottom: '15px',\n        width: '250px',\n        borderColor: \"black\",\n        borderWidth: '3px'\n      },\n      id: \"exampleInputEmail1\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, passwordError), /*#__PURE__*/React.createElement(reactbootstrap.FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginbottom: \"15px\",\n        border: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"#EC661C\",\n        fontSize: \"14px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, \"Role\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, \" * \")), /*#__PURE__*/React.createElement(reactbootstrap.FormControl, {\n      as: \"select\",\n      name: \"type\",\n      className: \"input_sw\",\n      value: role,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, Object.values(roles).map(role => /*#__PURE__*/React.createElement(\"option\", {\n      value: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, role.name))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(reactbootstrap.Button, {\n      style: {\n        float: 'right',\n        backgroundColor: '#EC661C',\n        borderColor: \"black\",\n        marginBottom: '25px',\n        marginTop: '25px',\n        width: '80px'\n      },\n      type: \"button\",\n      onClick: e => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, 'save')))));\n  }\n\n}\n\nexport default CreateUser;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/Biocipher1/src/Users/CreateUser.js"],"names":["React","Component","reactbootstrap","Constants","emailjs","CreateUser","constructor","props","state","name","email","password","role","roles","Roles","emailError","nameError","passwordError","feedback","handleChange","bind","handleSubmit","e","value","target","setState","userEmailValidation","RegExp","test","console","log","Object","values","EMPLOYEEDATA","map","user","templateId","sendFeedback","message_html","from_name","reply_to","variables","send","then","res","catch","err","error","render","color","fontSize","marginbottom","border","marginBottom","width","borderColor","borderWidth","id","float","backgroundColor","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,IAAI,EAAE,CAJG;AAKTC,MAAAA,KAAK,EAAEV,SAAS,CAACW,KALR;AAMTC,MAAAA,UAAU,EAAE,EANH;AAOTC,MAAAA,SAAS,EAAE,EAPF;AAQTC,MAAAA,aAAa,EAAE,EARN;AASTC,MAAAA,QAAQ,EAAE;AATD,KAAb;AAWA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAI;AACZ,UAAM;AAAEb,MAAAA,IAAF;AAAQc,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACA,SAAKC,QAAL,CAAc;AACV,OAAChB,IAAD,GAAQc,KADE;AAEVR,MAAAA,UAAU,EAAE,EAFF;AAGVC,MAAAA,SAAS,EAAE,EAHD;AAIVC,MAAAA,aAAa,EAAE;AAJL,KAAd;AAMH;;AAEDI,EAAAA,YAAY,GAAG;AACb,QAAIK,mBAAmB,GAAI,IAAIC,MAAJ,CAAW,0CAAX,EAAuDC,IAAvD,CAA4D,KAAKpB,KAAL,CAAWE,KAAvE,CAAD,GAAkF,IAAlF,GAAyF,KAAnH;;AACE,QAAI,KAAKF,KAAL,CAAWC,IAAX,KAAoB,EAApB,IAA0B,KAAKD,KAAL,CAAWE,KAAX,KAAqB,EAA/C,IAAqD,KAAKF,KAAL,CAAWG,QAAX,KAAwB,EAA7E,IAAmFe,mBAAvF,EAA4G;AAC1GG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,MAAAA,MAAM,CAACC,MAAP,CAAc7B,SAAS,CAAC8B,YAAxB,EAAsCC,GAAtC,CAA0CC,IAAI,IAAI;AAChDN,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACD,OAFD;AAGA,YAAMC,UAAU,GAAG,aAAnB;AACA,WAAKC,YAAL,CAAkBD,UAAlB,EAA8B;AAACE,QAAAA,YAAY,EAAE,KAAK9B,KAAL,CAAWU,QAA1B;AAAoCqB,QAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWC,IAA1D;AAAgE+B,QAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWE;AAArF,OAA9B;AACD,KAPD,MAOO;AACL,WAAKe,QAAL,CAAc;AACZV,QAAAA,UAAU,EAAG,KAAKP,KAAL,CAAWE,KAAX,KAAqB,EAArB,GAA2BgB,mBAAmB,GAAG,EAAH,GAAQ,mBAAtD,GAA6E,yBAD9E;AAEZV,QAAAA,SAAS,EAAE,KAAKR,KAAL,CAAWC,IAAX,KAAoB,EAApB,GAAyB,EAAzB,GAA8B,yBAF7B;AAGZQ,QAAAA,aAAa,EAAE,KAAKT,KAAL,CAAWG,QAAX,KAAwB,EAAxB,GAA6B,EAA7B,GAAkC;AAHrC,OAAd;AAKD;AAEJ;;AAED0B,EAAAA,YAAY,CAAED,UAAF,EAAcK,SAAd,EAAyB;AACpCrC,IAAAA,OAAO,CAACsC,IAAR,CACA,OADA,EACSN,UADT,EAEAK,SAFA,EAGEE,IAHF,CAGOC,GAAG,IAAI;AACZf,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KALD,EAMA;AANA,KAOCe,KAPD,CAOOC,GAAG,IAAIjB,OAAO,CAACkB,KAAR,CAAc,oEAAd,EAAoFD,GAApF,CAPd;AAQF;;AAECE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,QAAf;AAAyBE,MAAAA,KAAzB;AAAgCD,MAAAA,IAAhC;AAAsCI,MAAAA,SAAtC;AAAiDD,MAAAA,UAAjD;AAA6DE,MAAAA;AAA7D,QAA+E,KAAKT,KAA1F;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD,CAAgB,SAAhB;AAA0B,MAAA,SAAS,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEyC,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,aAAL,CAAN,CADJ,CADF,eAIE,oBAAC,cAAD,CAAgB,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD,CAAgB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE,MAAhB;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuD,WAAvD,eAAmE;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnE,CADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAExC,IAFT;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE;AAAE4C,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,KAAK,EAAE,OAA/B;AAAwCC,QAAAA,WAAW,EAAE,OAArD;AAA8DC,QAAAA,WAAW,EAAE;AAA3E,OAJT;AAKE,MAAA,EAAE,EAAC,oBALL;AAME,MAAA,WAAW,EAAE,WANf;AAOE,MAAA,QAAQ,EAAE,KAAKrC,YAPjB;AAQE,MAAA,YAAY,EAAC,KARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,eAeE;AAAK,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDlC,SAAjD,CAfF,eAgBE,oBAAC,cAAD,CAAgB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEmC,QAAAA,YAAY,EAAE,MAAhB;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuD,YAAvD,eAAoE;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApE,CADF,eAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAEvC,KAFT;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAE;AAAE2C,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,KAAK,EAAE,OAA/B;AAAwCC,QAAAA,WAAW,EAAE,OAArD;AAA8DC,QAAAA,WAAW,EAAE;AAA3E,OAJT;AAKE,MAAA,EAAE,EAAC,oBALL;AAME,MAAA,WAAW,EAAE,OANf;AAOE,MAAA,QAAQ,EAAE,KAAKrC,YAPjB;AAQE,MAAA,YAAY,EAAC,KARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAhBF,eA8BE;AAAK,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDnC,UAAjD,CA9BF,eA+BE,oBAAC,cAAD,CAAgB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEoC,QAAAA,YAAY,EAAE,MAAhB;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuD,UAAvD,eAAkE;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlE,CADJ,eAEI;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEtC,QAFT;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAE;AAAE0C,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,KAAK,EAAE,OAA/B;AAAwCC,QAAAA,WAAW,EAAE,OAArD;AAA8DC,QAAAA,WAAW,EAAE;AAA3E,OAJT;AAKE,MAAA,EAAE,EAAC,oBALL;AAME,MAAA,WAAW,EAAE,UANf;AAOE,MAAA,QAAQ,EAAE,KAAKrC,YAPjB;AAQE,MAAA,YAAY,EAAC,KARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF,CA/BF,eA6CE;AAAK,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDjC,aAAjD,CA7CF,eA8CE,oBAAC,cAAD,CAAgB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEkC,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,MADH,eAEE;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,eAKE,oBAAC,cAAD,CAAgB,WAAhB;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,UAHZ;AAIE,MAAA,KAAK,EAAErC,IAJT;AAKE,MAAA,QAAQ,EAAE,KAAKO,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGY,MAAM,CAACC,MAAP,CAAcnB,KAAd,EAAqBqB,GAArB,CAA0BtB,IAAD,iBACxB;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAAC6C,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB7C,IAAI,CAACH,IAA9B,CADD,CARH,CALF,CADF,CA9CF,eAkEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD,CAAgB,MAAhB;AAAuB,MAAA,KAAK,EAAE;AAAEiD,QAAAA,KAAK,EAAE,OAAT;AAAiBC,QAAAA,eAAe,EAAE,SAAlC;AAA4CJ,QAAAA,WAAW,EAAE,OAAzD;AAAkEF,QAAAA,YAAY,EAAE,MAAhF;AAAwFO,QAAAA,SAAS,EAAE,MAAnG;AAA2GN,QAAAA,KAAK,EAAE;AAAlH,OAA9B;AAA0J,MAAA,IAAI,EAAC,QAA/J;AAAwK,MAAA,OAAO,EAAEhC,CAAC,IAAI,KAAKD,YAAL,EAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,MADP,CADF,CAlEF,CAJF,CADF,CADF;AAiFD;;AA7I8B;;AAgJnC,eAAgBhB,UAAhB","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport { Constants } from '../_components/Constants';\nimport * as emailjs from \"emailjs-com\";\n\nclass CreateUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            role: 0,\n            roles: Constants.Roles,\n            emailError: '',\n            nameError: '',\n            passwordError: '',\n            feedback: '',\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n            emailError: '',\n            nameError: '',\n            passwordError: '',\n         });\n    }\n\n    handleSubmit() {\n      let userEmailValidation = (new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(this.state.email)) ? true : false;\n        if (this.state.name !== '' && this.state.email !== '' && this.state.password !== '' && userEmailValidation) {\n          console.log(\"create\");\n          Object.values(Constants.EMPLOYEEDATA).map(user => {\n            console.log(user);\n          })\n          const templateId = 'template_id';\n          this.sendFeedback(templateId, {message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email})\n        } else {\n          this.setState({\n            emailError : this.state.email !== '' ? (userEmailValidation ? '' : 'Not a valid email') : 'Email field is required',\n            nameError: this.state.name !== '' ? '' : 'Email field is required',\n            passwordError: this.state.password !== '' ? '' : 'Email field is required',\n          })\n        }\n\n    }\n\n    sendFeedback (templateId, variables) {\n    \temailjs.send(\n    \t'gmail', templateId,\n    \tvariables\n    \t).then(res => {\n      \tconsole.log('Email successfully sent!')\n    \t})\n    \t// Handle errors here however you like, or use a React error boundary\n    \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n\n    render() {\n      const { name, email, password, roles, role, nameError, emailError, passwordError } = this.state;\n      return (\n        <div className=\"\" >\n          <reactbootstrap.Container className=\"pt-5 px-0\">\n            <div style={{ color: '#EC661C', fontSize: '20px'}} >\n                <span><h4>{'Create user'}</h4></span>\n            </div>\n            <reactbootstrap.Form>\n              <reactbootstrap.FormGroup>\n                <div style={{ marginbottom: '15px',border: '0px' }}>\n                  <label style={{ color: '#EC661C', fontSize: '14px' }}>{'User name'}<span style={{ color: 'red' }}> * </span></label>\n                  <input\n                    name=\"name\"\n                    value={name}\n                    type=\"text\"\n                    style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                    id=\"exampleInputEmail1\"\n                    placeholder={\"User name\"}\n                    onChange={this.handleChange}\n                    autoComplete=\"off\" />\n                </div>\n              </reactbootstrap.FormGroup>\n              <div style={{ color: 'red', fontSize: '15px' }}>{nameError}</div>\n              <reactbootstrap.FormGroup>\n                <div style={{ marginbottom: '15px',border: '0px' }}>\n                  <label style={{ color: '#EC661C', fontSize: '14px' }}>{'User email'}<span style={{ color: 'red' }}> * </span></label>\n                  <input\n                    name=\"email\"\n                    value={email}\n                    type=\"email\"\n                    style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                    id=\"exampleInputEmail1\"\n                    placeholder={\"Email\"}\n                    onChange={this.handleChange}\n                    autoComplete=\"off\" />\n                </div>\n              </reactbootstrap.FormGroup>\n              <div style={{ color: 'red', fontSize: '15px' }}>{emailError}</div>\n              <reactbootstrap.FormGroup>\n                <div style={{ marginbottom: '15px',border: '0px' }}>\n                    <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Password'}<span style={{ color: 'red' }}> * </span></label>\n                    <input\n                      name=\"password\"\n                      value={password}\n                      type=\"password\"\n                      style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                      id=\"exampleInputEmail1\"\n                      placeholder={\"Password\"}\n                      onChange={this.handleChange}\n                      autoComplete=\"off\" />\n                </div>\n              </reactbootstrap.FormGroup>\n              <div style={{ color: 'red', fontSize: '15px' }}>{passwordError}</div>\n              <reactbootstrap.FormGroup>\n                <div style={{ marginbottom: \"15px\", border: \"0px\" }}>\n                  <label style={{ color: \"#EC661C\", fontSize: \"14px\" }}>\n                    {\"Role\"}\n                    <span style={{ color: \"red\" }}> * </span>\n                  </label>\n                  <reactbootstrap.FormControl\n                    as=\"select\"\n                    name=\"type\"\n                    className=\"input_sw\"\n                    value={role}\n                    onChange={this.handleChange}\n                  >\n                    {/* <option>Select role</option> */}\n                    {Object.values(roles).map((role) => (\n                      <option value={role.id}>{role.name}</option>\n                    ))}\n                  </reactbootstrap.FormControl>\n                </div>\n              </reactbootstrap.FormGroup>\n              <div>\n                <reactbootstrap.Button style={{ float: 'right',backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={e => this.handleSubmit()}>\n                      {'save'}\n                </reactbootstrap.Button>\n              </div>\n              </reactbootstrap.Form>\n            </reactbootstrap.Container>\n          </div>\n      )\n    }\n}\n\nexport default (CreateUser);\n"]},"metadata":{},"sourceType":"module"}